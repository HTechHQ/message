linters-settings:
  goimports:
    local-prefixes: github.com/HTechHQ/message
  misspell:
    locale: UK
  gci: # conflict with goimports, see: https://github.com/golangci/golangci-lint/issues/1490#issuecomment-1186947213
    sections:
      - standard
      - default
      - prefix(github.com/HTechHQ/message)

linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exhaustruct
    - exportloopref
    - errcheck
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - gosimple
    - govet
    - importas
    - interfacebloat
    - ireturn
    - ineffassign
    - lll
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - staticcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tenv
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - usestdlibvars
    - unused
    #- varnamelen # mostly reports the use of short variables, like wg (sync.WaitGroup), in test cases as to short for its scope.
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - funlen      # Allow test functions of any length
        - exhaustruct # Allow use of uninitialised fields in tests, for convenience